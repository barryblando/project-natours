.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    position: fixed;
    top: 6rem; // in order to cover
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, .1);
    text-align: center;
    cursor: pointer;

    @include respond(tab-port) {
      top: 4rem;
      right: 4rem;
    }

    @include respond(tab-port) {
      top: 3rem;
      right: 3rem;
    }
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    position: fixed;
    // button is 1rem higher & wider than background
    // starts at top-right spanning over the entire viewport because of full height & width
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient($color-primary-light, $color-primary-dark);
    z-index: 1000;
    // for using custom timing cubic-bezier INFO: easings.net / cubic-bezier.com
    transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1); // easeInOutQuint

    // test: dev-purposes
    // transform: scale(80);

    @include respond(tab-port) {
      top: 4.5rem;
      right: 4.5rem;
    }

    @include respond(phone) {
      top: 3.5rem;
      right: 3.5rem;
    }
  }

  &__nav {
    // occupy viewport with full height & width
    height: 100vh;
    // width: 100%; // only be viewed when checkbox is :checked
    position: fixed;
    // starts at left moving over the entire viewport because of full height & width
    top: 0;
    left: 0;
    z-index: 1500;
    // set to hidden
    opacity: 0;
    width: 0;
    transition: all .8s cubic-bezier(0.68, -0.55, 0.265, 1.55); // easeInOutBack
  }

  &__list {
    @include position-absolute-center;
    list-style: none;
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem; // margin between elements lists
  }

  // NOTE: Link Animation
  &__link {
    &:link,
    &:visited {
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
      background-size: 230%; // move background to the right side by increasing its size
      transition: all .4s;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    &:hover,
    &:active {
      background-position: 100%; // shift back background to its position
      color: $color-primary;
      transform: translateX(1rem);
    }
  }

  // NOTE: Functionality

  // if label is clicked the checkbox is checked because of id & for must be the same name
  &__checkbox:checked ~ &__background {
    transform: scale(80);
  }

  &__checkbox:checked ~ &__nav{
    opacity: 1;
    width: 100%;
  }

  // NOTE: Icon
  &__icon {
    position: relative;
    margin-top: 3.5rem;

    // Create Lines
    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-grey-dark-3;
      display: inline-block;
    }

    // In order for pseudo class to appear you should defined its content property
    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 0;
      transition: all .2s;
    }

    &::before {
      top: -.8rem; // move up
    }

    &::after {
      top: .8rem; // move down
    }
  }

  &__button:hover &__icon::before {
    top: -1rem;
  }

  &__button:hover &__icon::after {
    top: 1rem;
  }

  // + When the checkbox is selected, then we select its sibling which is button and then child which is the icon
  &__checkbox:checked + &__button &__icon {
    background-color: transparent;
  }

  &__checkbox:checked + &__button &__icon::before {
    top: 0;
    transform: rotate(135deg);
  }

  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg);
  }
}
